{
	"info": {
		"_postman_id": "318436e1-30f7-48ec-88b1-003de1a743fe",
		"name": "Light-Issuer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10787506"
	},
	"item": [
		{
			"name": "agent",
			"item": [
				{
					"name": "fetch credential",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{credential_request_jwz}}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/v1/agent",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"agent"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Identity { Initialize Collection Variables }",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');",
							"});",
							"",
							"pm.test(\"Identifier is not empty\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.Identifier).to.not.eq(undefined);",
							"});",
							"",
							"pm.collectionVariables.set(\"issuer_identity\", pm.response.json().Identifier);",
							"pm.collectionVariables.set(\"user_identity\", pm.response.json().Identifier);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}/api/v1/identity",
					"host": [
						"{{server}}"
					],
					"path": [
						"api",
						"v1",
						"identity"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create age claim",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {",
							"    pm.response.to.have.status(202);",
							"});",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');",
							"});",
							"",
							"pm.collectionVariables.set(\"age_claim_id\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\": \"{{user_identity}}\",\n    \"schema\": {\n        \"url\": \"https://raw.githubusercontent.com/iden3/claim-schema-vocab/main/schemas/json-ld/kyc-v2.json-ld\",\n        \"type\": \"KYCAgeCredential\"\n    },\n    \"data\": {\n        \"birthday\": 19960424,\n        \"documentType\": 1\n    },\n    \"expiration\": 12345678888\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/api/v1/claims",
					"host": [
						"{{server}}"
					],
					"path": [
						"api",
						"v1",
						"claims"
					]
				},
				"description": "Issues a claim for a particular identity."
			},
			"response": []
		},
		{
			"name": "Get Age Claim",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');",
							"});",
							"",
							"pm.test(\"Proof section is NOT empty\", function () {",
							"    pm.expect(pm.response.json().proof).to.not.eq(undefined);",
							"});",
							"",
							"pm.test(\"Credential status section is NOT empty\", function () {",
							"    pm.expect(pm.response.json().credentialStatus).to.not.eq(undefined);",
							"});",
							"",
							"pm.collectionVariables.set(\"claim_nonce\", pm.response.json().rev_nonce);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}/api/v1/claims/{{age_claim_id}}",
					"host": [
						"{{server}}"
					],
					"path": [
						"api",
						"v1",
						"claims",
						"{{age_claim_id}}"
					]
				},
				"description": "The endpoint returns a particular claim which is identified by a unique claim_id.\n\nThe returned data will be a JSON-LD claim.\n\n``` json\n{\n    \t\"id\": \"6ae9554f-1ac7-4bf9-8047-92f9781cfb2d\",\n    \t\"@context\": [\n        \t\"https://raw.githubusercontent.com/iden3/claim-schema-vocab/main/schemas/json-ld/iden3credential.json-ld\",\n        \t\"ipfs://QmP8NrKqoBKjmKwMsC8pwBCBxXR2PhwSepwXx31gnJxAbP\"\n    \t],\n    \t\"@type\": [\n        \t\"Iden3Credential\"\n    \t],\n    \t\"expiration\": \"2361-03-21T19:14:48Z\",\n    \t\"updatable\": false,\n    \t\"version\": 0,\n    \t\"rev_nonce\": 419111588,\n    \t\"credentialSubject\": {\n        \t\"countryCode\": 980,\n        \t\"documentType\": 1,\n        \t\"id\": \"11Brf4vZMu9biPbwpYeyeY7dN8Qast821ggbKgeGW\",\n        \t\"type\": \"KYCCountryOfResidenceCredential\"\n    \t},\n    \t\"credentialStatus\": {\n        \t\"id\": \"http://ec2-34-247-165-109.eu-west-1.compute.amazonaws.com:9988/api/v1/identities/11C2vbrHQdFGzy3WofS4DWNHMtztf119BpLW7X2hpK/claims/revocation/status/419111588\",\n        \t\"type\": \"SparseMerkleTreeProof\"\n    \t},\n    \t\"subject_position\": \"index\",\n    \t\"credentialSchema\": {\n        \t\"@id\": \"ipfs://QmP8NrKqoBKjmKwMsC8pwBCBxXR2PhwSepwXx31gnJxAbP\",\n        \t\"type\": \"KYCCountryOfResidenceCredential\"\n    \t},\n    \t\"proof\": [\n        \t{\n            \t\"@type\": \"BJJSignature2021\",\n            \t\"issuer_data\": {\n                \t\"id\": \"11C2vbrHQdFGzy3WofS4DWNHMtztf119BpLW7X2hpK\",\n                \t\"state\": {\n                    \t\"claims_tree_root\": \"d9643d1f19ad789719e08262833674c58f4d5a7c231e660542997a824d7ac818\",\n                    \t\"value\": \"fd58f542d3f309976236709d147eee634adbc40c10ccbf7d18e100675fb01e2b\"\n                \t},\n                \t\"auth_claim\": [\n                    \t\"304427537360709784173770334266246861770\",\n                    \t\"0\",\n                    \t\"14392017677317612884093082291076944995296317392637679075320748049587477256380\",\n                    \t\"11831897734110146476356752524674609315803674586005825629788304333527482076198\",\n                    \t\"0\",\n                    \t\"0\",\n                    \t\"0\",\n                    \t\"0\"\n                \t],\n                \t\"mtp\": {\n                    \t\"existence\": true,\n                    \t\"siblings\": []\n                \t},\n                \t\"revocation_status\": \"http://ec2-34-247-165-109.eu-west-1.compute.amazonaws.com:9988/api/v1/identities/11C2vbrHQdFGzy3WofS4DWNHMtztf119BpLW7X2hpK/claims/revocation/status/419111588\"\n            \t},\n            \t\"signature\": \"ff6fba817e1efbf4bbe71f1b63f45471b5c7b6ab095ccc9a1d16629fa2ef9f0a89e263a439914e574d6ccba39a26d29c4c24dcf22df12596c333cd80258d7a01\"\n        \t}\n               \t]\n\t}\n\n\n```"
			},
			"response": []
		},
		{
			"name": "Get revoacation status.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Issuer is not empty\", function () {",
							"    pm.expect(pm.response.json().issuer).to.not.eq(undefined);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}/api/v1/claims/revocation/status/{{claim_nonce}}",
					"host": [
						"{{server}}"
					],
					"path": [
						"api",
						"v1",
						"claims",
						"revocation",
						"status",
						"{{claim_nonce}}"
					]
				},
				"description": "It returns whether a claim has been revoked or not.\n\nThe response will be a JSON with a single field claiming the revocation status via a boolean value.\n\n``` json\n{\n    \"revoked\": \"true\"\n}\n\n```"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "server",
			"value": "http://localhost:8001",
			"type": "string"
		},
		{
			"key": "claim_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "claim_nonce",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_identity",
			"value": " 113TCVw5KMeMp99Qdvub9Mssfz7krL9jWNvbdB7Fd2",
			"type": "string"
		},
		{
			"key": "credential_jwz_request",
			"value": "",
			"type": "string"
		},
		{
			"key": "issuer_identity",
			"value": " 113TCVw5KMeMp99Qdvub9Mssfz7krL9jWNvbdB7Fd2"
		},
		{
			"key": "age_claim_id",
			"value": ""
		}
	]
}